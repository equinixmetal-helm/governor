{{- if .Values.api.enabled }}
---
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: governor-api
  labels: 
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    {{- with .Values.api.labels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.api.replicaCount }}
  revisionHistoryLimit: 3
  selector:
    matchLabels: 
    {{- with .Values.api.matchLabels }}
      {{- toYaml . | nindent 6 }}
    {{- end }}
  template:
    metadata:
      labels: 
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        {{- with .Values.api.labels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/api-configmap.yml") . | sha256sum }}
    spec:
      serviceAccountName: {{ .Values.api.serviceAccount.name }}
      initContainers:
      # Optional: Pre-creates the `/app-audit/audit.log` named pipe.
      - image: "{{ .Values.audit.auditImage.repository }}:{{ .Values.audit.auditImage.tag | default .Chart.AppVersion }}"
        args:
          - 'init'
          - '-f'
          - '/app-audit/audit.log'
        name: init-audit-logs-api
        {{- with .Values.audit.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        resources:
{{ toYaml .Values.audit.initContainer.resources | indent 10 }}
        imagePullPolicy: {{ .Values.audit.auditImage.pullPolicy }}
        volumeMounts:
          - mountPath: /app-audit
            name: audit-logs-api
      containers:
      # -- governor-api
      - name: governor-api
        args:
          - serve
          - "--config=/config/.governor.yaml"
        envFrom:
        - secretRef:
            name: {{ .Values.api.db.uri.existingSecret }}
        {{- if .Values.api.tracing.enabled }}
        env:
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://opentelemetry-collector:4317
          - name: OTEL_EXPORTER_OTLP_INSECURE
            value: "true"
        {{- end }}
        image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.api.image.pullPolicy }}
        {{- with .Values.api.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        ports:
        - name: http
          containerPort: 3001
        livenessProbe:
          httpGet:
            path: /healthz/liveness
            port: http
        readinessProbe:
          httpGet:
            path: /healthz/readiness
            port: http
          {{- if .Values.api.readinessProbe.initialDelaySeconds }}
          initialDelaySeconds: {{ .Values.api.readinessProbe.initialDelaySeconds }}
          {{- else }}
          initialDelaySeconds: 5
          {{- end }}
          {{- if .Values.api.readinessProbe.periodSeconds }}
          periodSeconds: {{ .Values.api.readinessProbe.periodSeconds }}
          {{- else }}
          periodSeconds: 20
          {{- end }}
          {{- if .Values.api.readinessProbe.timeoutSeconds }}
          timeoutSeconds: {{ .Values.api.readinessProbe.timeoutSeconds }}
          {{- else }}
          timeoutSeconds: 2
          {{- end }}
          {{- if .Values.api.readinessProbe.successThreshold }}
          successThreshold: {{ .Values.api.readinessProbe.successThreshold }}
          {{- else }}
          successThreshold: 1
          {{- end }}
          {{- if .Values.api.readinessProbe.failureThreshold }}
          failureThreshold: {{ .Values.api.readinessProbe.failureThreshold }}
          {{- else }}
          failureThreshold: 3
          {{- end }}
        resources:
{{ toYaml .Values.api.resources | indent 10 }}
        volumeMounts:
        - name: config-volume
          mountPath: /config
          readOnly: true
        - name: dbcerts
          mountPath: "/dbcerts"
          readOnly: true
        - name: natscreds
          mountPath: "/nats"
          readOnly: true
        - name: audit-logs-api
          mountPath: /app-audit
        {{- if .Values.api.iamRuntime.enabled }}
        {{- include "iam-runtime-infratographer.volumeMounts" $ | nindent 8 }}
        {{- end }}

      {{- if .Values.api.iamRuntime.enabled }}
      # -- iam-runtime-infratographer container
      - {{- include "iam-runtime-infratographer.container" $ | nindent 8 }}
      {{- end }}

      # -- audit-governor-api container
      - name: audit-governor-api
        args:
          - -f
          - /app-audit/audit.log
        image: "{{ .Values.audit.auditImage.repository }}:{{ .Values.audit.auditImage.tag | default .Chart.AppVersion }}"
        {{- with .Values.audit.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        resources:
{{ toYaml .Values.audit.resources | indent 10 }}
        volumeMounts:
        - name: audit-logs-api
          mountPath: /app-audit
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

      volumes:
      - name: config-volume
        configMap:
          name: governor-api-config
      - name: dbcerts
        secret:
          secretName: governor-api-crdb-ca
          defaultMode: 0444
      - name: audit-logs-api
        emptyDir: {}
      - name: natscreds
        secret:
          secretName: governor-api-nats-creds
          defaultMode: 0444
      {{- if .Values.api.iamRuntime.enabled }}
      {{- include "iam-runtime-infratographer.volumes" $ | nindent 6 }}
      - name: tokens
        projected:
          sources:
            - serviceAccountToken:
                path: iam-runtime
      {{- end }}
{{- end }}
